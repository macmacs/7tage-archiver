// Generated by https://mholt.github.io/json-to-go/
package main

import "time"

type SearchResult struct {
	Took       int    `json:"took"`
	IsTimedOut bool   `json:"isTimedOut"`
	Length     int    `json:"length"`
	Total      int    `json:"total"`
	Hits       []Hits `json:"hits"`
}
type Versions struct {
	Width    int    `json:"width"`
	Path     string `json:"path"`
	HashCode int    `json:"hashCode"`
}
type Images struct {
	Category  string     `json:"category"`
	Copyright string     `json:"copyright"`
	Alt       string     `json:"alt"`
	Text      string     `json:"text"`
	Versions  []Versions `json:"versions"`
	Mode      string     `json:"mode"`
	HashCode  int        `json:"hashCode"`
}
type Data struct {
	Href                 string        `json:"href"`
	Station              string        `json:"station"`
	Entity               string        `json:"entity"`
	ID                   int           `json:"id"`
	BroadcastDay         int           `json:"broadcastDay"`
	ProgramKey           string        `json:"programKey"`
	Program              string        `json:"program"`
	Title                string        `json:"title"`
	Subtitle             string        `json:"subtitle"`
	Ressort              interface{}   `json:"ressort"`
	State                string        `json:"state"`
	IsOnDemand           bool          `json:"isOnDemand"`
	IsGeoProtected       bool          `json:"isGeoProtected"`
	IsAdFree             bool          `json:"isAdFree"`
	Start                int64         `json:"start"`
	StartISO             time.Time     `json:"startISO"`
	StartOffset          int           `json:"startOffset"`
	ScheduledStart       int64         `json:"scheduledStart"`
	ScheduledStartISO    time.Time     `json:"scheduledStartISO"`
	ScheduledStartOffset int           `json:"scheduledStartOffset"`
	End                  int64         `json:"end"`
	EndISO               time.Time     `json:"endISO"`
	EndOffset            int           `json:"endOffset"`
	ScheduledEnd         int64         `json:"scheduledEnd"`
	ScheduledEndISO      time.Time     `json:"scheduledEndISO"`
	ScheduledEndOffset   int           `json:"scheduledEndOffset"`
	NiceTime             int64         `json:"niceTime"`
	NiceTimeISO          time.Time     `json:"niceTimeISO"`
	NiceTimeOffset       int           `json:"niceTimeOffset"`
	Description          interface{}   `json:"description"`
	PressRelease         string        `json:"pressRelease"`
	Moderator            interface{}   `json:"moderator"`
	URL                  string        `json:"url"`
	Images               []Images      `json:"images"`
	Tags                 []interface{} `json:"tags"`
	Oe1Tags              []interface{} `json:"oe1tags"`
}
type Highlights struct {
	Title []string `json:"title"`
}
type Hits struct {
	Data       Data       `json:"data"`
	Highlights Highlights `json:"highlights"`
}
